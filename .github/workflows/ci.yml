---
name: ci
on:
  pull_request:
jobs:
  ok:
    runs-on: ubuntu-24.04
    if: failure()
    needs:
      - test
      - lint
    steps:
      - run: exit 1
  test:
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      pull-requests: write
    env:
      AQUA_CONFIG: ${{ github.workspace }}/aqua.yaml
      AQUA_POLICY_CONFIG: ${{ github.workspace }}/aqua-policy.yaml
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        id: setup-go
        with:
          cache: true
          go-version: stable
      - run: go mod download
      - name: test
        run: |
          make coverage
      - uses: aquaproj/aqua-installer@d1fe50798dbadd4eb5b98957290ca175f6b4870f # v4.0.2
        with:
          aqua_version: v2.53.9
      - run: aqua install
      -
        name: octocov
        env:
          OCTOCOV_GITHUB_TOKEN: ${{ github.token }}
        run: |
          aqua exec -- octocov
  lint:
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      pull-requests: write
    env:
      AQUA_CONFIG: ${{ github.workspace }}/aqua.yaml
      AQUA_POLICY_CONFIG: ${{ github.workspace }}/aqua-policy.yaml
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        id: setup-go
        with:
          cache: true
          go-version: stable
      - run: go mod download
      - uses: aquaproj/aqua-installer@d1fe50798dbadd4eb5b98957290ca175f6b4870f # v4.0.2
        with:
          aqua_version: v2.53.9
      - run: aqua install
      - name: golangci-lint
        env:
          _go_version: ${{ steps.setup-go.outputs.go-version }}
        run: |
          golangci-lint run \
            --output.text.path stdout \
            --output.text.print-issued-lines \
            --issues-exit-code 0 \
            --config .golangci.yml \
            1>lint-stdout.txt 2>/dev/stderr
      - name: reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          reviewdog \
            -name golangci-lint \
            -f golangci-lint \
            -filter-mode nofilter \
            -reporter github-pr-check \
            -fail-level error \
            < lint-stdout.txt
